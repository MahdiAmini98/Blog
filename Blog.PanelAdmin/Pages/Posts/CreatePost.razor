@page "/posts/create"
@using Blog.PanelAdmin.Models.Categories
@using Blog.PanelAdmin.Models.Posts
@using Blog.PanelAdmin.Models.Tags
@using Blog.PanelAdmin.Services.Categories
@using Blog.PanelAdmin.Services.Posts
@using Blog.PanelAdmin.Services.Tag
@inject ITagService TagService
@inject ICategoryService CategoryService
@inject IPostService PostService
@inject ISnackbar Snackbar
@inject NavigationManager NavigationManager


<h3>ارسال مطلب جدید</h3>


<PostBaseInfo PostModel="PostModel" OnValidSubmit="HandleCreatePost">

    <CKEditor OnContentChanged="(ckContent)=> PostModel.Content = ckContent" />

    <SeoSettings PostModel="PostModel" />

    <CategoryTagSelector Tags="Tags"
                         SelectedTags="SelectedTags"
                         SelectedTagsChanged="OnSelectedTagsChanged"
                         Categories="Categories"
                         SelectedCategories="SelectedCategories"
                         SelectedCategoriesChanged="OnSelectedCategoriesChanged" />

    <MudDivider DividerType="DividerType.FullWidth" Class="my-6"></MudDivider>

    <MudButton ButtonType="ButtonType.Submit" Color="@Color.Success" Size="Size.Medium"
               StartIcon="@Icons.Material.Filled.Publish" Class="mx-2" DropShadow="true" FullWidth="true" Variant="Variant.Filled">ذخیره و ارسال</MudButton>
</PostBaseInfo>





@code {

    private CreatePostRequestDto PostModel { get; set; } = new();

    private List<TagDto> Tags = new();
    private IEnumerable<TagDto> SelectedTags { get; set; } = new List<TagDto>();

    private List<CategoryDto> Categories = new();
    private IEnumerable<CategoryDto> SelectedCategories { get; set; } = new List<CategoryDto>();



    protected override async Task OnInitializedAsync()
    {
        Tags = await TagService.GetTagsAsync();
        Categories = await CategoryService.GetCategoriesAsync();
    }

    private async Task HandleCreatePost()
    {
        var success = await PostService.CreatePostAsync(PostModel);

        if (success)
        {
            Snackbar.Add("پست جدید با موفقیت ایجاد شد.", Severity.Success);
            NavigationManager.NavigateTo("/posts");
        }
        else
        {
            Snackbar.Add("خطا در ایجاد پست.", Severity.Error);
        }
    }

    private async Task OnSelectedCategoriesChanged(IEnumerable<CategoryDto> categories)
    {
        SelectedCategories = categories;
        PostModel.CategoryIds = SelectedCategories.Select(t => t.Id).ToList();
    }
    private async Task OnSelectedTagsChanged(IEnumerable<TagDto> tags)
    {
        SelectedTags = tags;
        PostModel.TagIds = SelectedTags.Select(t => t.Id).ToList();
    }
}
